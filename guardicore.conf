input {
    syslog {
      id => "guardicore-syslog-rfc5424"
      port => 5069
      tags => ["guardicore","pipeline-version-1.20"]
      add_field => { "log_event_type" => "guardicore" }
      grok_pattern => "<%{POSINT:priority}>\d\s%{TIMESTAMP_ISO8601:timestamp}\s%{DATA:log_type}\;%{GREEDYDATA:message}"
    }
}

filter {

  if [message] == "" {
    drop {}
  }

  grok {
    match => { "log_type" => "%{DATA:[event][provider]}\s\-\s%{DATA:[event][kind]}\s\-\s%{DATA:[event][action]}$" }
  }
  
  if [event][kind] == "Incident" {
    mutate {
      add_tag => ["incident"]
      gsub => [
        "[message]", "\;1. ", "",
        "[message]", "\;\d", "-",
        "[event][original]", "\;1. ", "",
        "[event][original]", "\;\d", "-"
      ]
    }
  }

  kv {
    source => "message"
    trim_key => "\s"
    field_split => ";"
    value_split => ":"
    allow_empty_values => false
    target => "guardicore"
    transform_key => "lowercase"
  }

  if [guardicore][affected agents] {
    mutate {
      rename => { "[guardicore][affected agents]" => "[guardicore][affected_agents]" }
    }
  }

  if [guardicore][error code] {
    mutate {
      rename => { "[guardicore][error code]" => "[guardicore][error_code]" }
    }
  }

  if [guardicore][source labels] {
      mutate {
      rename => { "[guardicore][source labels]" => "[guardicore][source_labels]" }
      split => { "[guardicore][source_labels]" => "," }
    }
  }

  if [guardicore][destination labels] {
    mutate {
      rename => { "[guardicore][destination labels]" => "[guardicore][destination_labels]" }
      split => { "[guardicore][destination_labels]" => "," }
    }
  }

  if [guardicore][end time] {
    mutate {
      rename => { "[guardicore][end time]" => "[guardicore][end_time]" }
    }
  }

  if [guardicore][start time] {
    mutate {
      rename => { "[guardicore][start time]" => "[guardicore][start_time]" }
    }
  }

  if [guardicore][affected_agents] {
    grok {
      match => { "[guardicore][affected_agents]" => "%{DATA:[guardicore][agent][name]}\s\((ip\:\s%{IP:[guardicore][agent][ip]}\,\s)?component_id\: %{DATA:[guardicore][agent][component_id]}\)$"
      }
    }
  }

  if [guardicore][ip address] {
    mutate {
      rename => { "[guardicore][ip address]" => "[guardicore][ip_address]" }
    }
  }

  if [guardicore][username] {
    mutate {
      add_field => { "[user][name]" => "%{[guardicore][username]}"}
    }

    if [guardicore][ip_address] {
      mutate {
        add_field => { "[source][ip]" => "%{[guardicore][ip_address]}"}
      }
    }
  }

  if [guardicore][tags] {
    mutate {
      split => { "[guardicore][tags]" => ", " }
    }
  }

  if ([event][kind] == "Incident" and [guardicore][description]) {
    grok { 
      match => { "[guardicore][description]" => "^.*\sbetween\s(%{IP:[guardicore][incident][source][ip]}|%{DATA:[guardicore][incident][source][host]})\sand\s(%{IP:[guardicore][incident][destination][ip]}|%{GREEDYDATA:[guardicore][incident][destination][host]})"
      }
    }
  }

  if ([event][kind] == "Incident" and [guardicore][summary]) {
    mutate {
      gsub => [ "[guardicore][summary]", "\\n", ""] 
    }
    
    mutate {
      
      rename => { "[guardicore][summary]" => "[guardicore][incident][summary]"}
      split => { "[guardicore][incident][summary]" => "-. "}
    }
  }

  mutate {
    add_field => { "index_name" => "logstash-guardicore" }
  }
}



output {
  pipeline {
    send_to => [enrichment]
  }
}
